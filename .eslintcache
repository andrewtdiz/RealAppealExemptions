[{"C:\\Users\\atd68\\Desktop\\real-appeal-blog\\src\\App.tsx":"1","C:\\Users\\atd68\\Desktop\\real-appeal-blog\\src\\reportWebVitals.ts":"2","C:\\Users\\atd68\\Desktop\\real-appeal-blog\\src\\index.tsx":"3","C:\\Users\\atd68\\Desktop\\real-appeal-blog\\src\\components\\Navbar.tsx":"4","C:\\Users\\atd68\\Desktop\\real-appeal-blog\\src\\components\\BlogContent.tsx":"5","C:\\Users\\atd68\\Desktop\\real-appeal-blog\\src\\components\\BlogLinkDisplay.tsx":"6","C:\\Users\\atd68\\Documents\\real-appeal-exemptions\\src\\index.tsx":"7","C:\\Users\\atd68\\Documents\\real-appeal-exemptions\\src\\App.tsx":"8","C:\\Users\\atd68\\Documents\\real-appeal-exemptions\\src\\components\\Navbar.tsx":"9","C:\\Users\\atd68\\Documents\\real-appeal-exemptions\\src\\components\\ExemptionContainer.tsx":"10","C:\\Users\\atd68\\Documents\\real-appeal-exemptions\\src\\components\\ExemptionsSections\\ExemptionsLoading.tsx":"11","C:\\Users\\atd68\\Documents\\real-appeal-exemptions\\src\\components\\ExemptionsSections\\01LetsCheck.tsx":"12","C:\\Users\\atd68\\Documents\\real-appeal-exemptions\\src\\components\\ExemptionsSections\\02AvailableSavings.tsx":"13","C:\\Users\\atd68\\Documents\\real-appeal-exemptions\\src\\components\\ExemptionsSections\\03MailingAddress.tsx":"14","C:\\Users\\atd68\\Documents\\real-appeal-exemptions\\src\\components\\ExemptionsSections\\04Searching.tsx":"15","C:\\Users\\atd68\\Documents\\real-appeal-exemptions\\src\\components\\ExemptionsSections\\05WellCheck.tsx":"16","C:\\Users\\atd68\\Documents\\real-appeal-exemptions\\src\\components\\ExemptionInfoTab.tsx":"17","C:\\Users\\atd68\\Documents\\real-appeal-exemptions\\src\\components\\ExemptionsSections\\06GetStarted.tsx":"18","C:\\Users\\atd68\\Documents\\real-appeal-exemptions\\src\\components\\AddressInput.tsx":"19","C:\\Users\\atd68\\Documents\\real-appeal-exemptions\\src\\components\\Footer.tsx":"20","C:\\Users\\atd68\\Documents\\real-appeal-exemptions\\src\\components\\ExemptionsSections\\07CheckExemptions.tsx":"21","C:\\Users\\atd68\\Documents\\real-appeal-exemptions\\src\\components\\ExemptionsButton.tsx":"22","C:\\Users\\atd68\\Documents\\real-appeal-exemptions\\src\\components\\ExemptionsSections\\08Review.tsx":"23"},{"size":280,"mtime":1608084580746,"results":"24","hashOfConfig":"25"},{"size":425,"mtime":1608076218696,"results":"26","hashOfConfig":"25"},{"size":500,"mtime":1608076218696,"results":"27","hashOfConfig":"25"},{"size":1747,"mtime":1608086007540,"results":"28","hashOfConfig":"25"},{"size":8935,"mtime":1608090180146,"results":"29","hashOfConfig":"25"},{"size":1041,"mtime":1608085444154,"results":"30","hashOfConfig":"25"},{"size":472,"mtime":1609805779976,"results":"31","hashOfConfig":"32"},{"size":315,"mtime":1609801553320,"results":"33","hashOfConfig":"32"},{"size":1735,"mtime":1610727748664,"results":"34","hashOfConfig":"32"},{"size":8909,"mtime":1611535084730,"results":"35","hashOfConfig":"32"},{"size":254,"mtime":1609810662501,"results":"36","hashOfConfig":"32"},{"size":8524,"mtime":1611455750082,"results":"37","hashOfConfig":"32"},{"size":8908,"mtime":1611507564027,"results":"38","hashOfConfig":"32"},{"size":3510,"mtime":1611456692680,"results":"39","hashOfConfig":"32"},{"size":57019,"mtime":1609872766271,"results":"40","hashOfConfig":"32"},{"size":1320,"mtime":1611456860890,"results":"41","hashOfConfig":"32"},{"size":1778,"mtime":1609874197520,"results":"42","hashOfConfig":"32"},{"size":6195,"mtime":1610726505724,"results":"43","hashOfConfig":"32"},{"size":3141,"mtime":1610724881642,"results":"44","hashOfConfig":"32"},{"size":586,"mtime":1610728107338,"results":"45","hashOfConfig":"32"},{"size":3207,"mtime":1611508029067,"results":"46","hashOfConfig":"32"},{"size":447,"mtime":1611457186471,"results":"47","hashOfConfig":"32"},{"size":5088,"mtime":1611506410345,"results":"48","hashOfConfig":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"h4tl0t",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"2bnoou",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"87"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"C:\\Users\\atd68\\Desktop\\real-appeal-blog\\src\\App.tsx",[],"C:\\Users\\atd68\\Desktop\\real-appeal-blog\\src\\reportWebVitals.ts",[],"C:\\Users\\atd68\\Desktop\\real-appeal-blog\\src\\index.tsx",[],"C:\\Users\\atd68\\Desktop\\real-appeal-blog\\src\\components\\Navbar.tsx",[],"C:\\Users\\atd68\\Desktop\\real-appeal-blog\\src\\components\\BlogContent.tsx",["106"],"C:\\Users\\atd68\\Desktop\\real-appeal-blog\\src\\components\\BlogLinkDisplay.tsx",["107"],"import React, {useState, useEffect} from 'react'\r\n\r\nexport default function BlogLinkDisplay(props:any) {\r\n    const [hovering, setHovering] = React.useState<boolean>(false)\r\n\r\n    useEffect(() => {\r\n        console.log(hovering)\r\n    }, [hovering])\r\n\r\n    return (\r\n        <div className=\"w-72 py-8 group overflow-hidden md:mx-4 flex flex-col text-gray-700 cursor-pointer hover:text-black items-center\">\r\n            <div onMouseEnter={() => setHovering(true)} onMouseLeave={() => setHovering(false)} className=\"w-72 h-64 overflow-hidden\">\r\n                <img src={props.img} className=\"rounded-sm h-full w-auto object-cover transition-all duration-300 ease-in-out\" style={{transform: hovering ? 'scale(1.1)' : 'scale(1.0)'}} alt=\"\"/>\r\n            </div>\r\n            <p onMouseEnter={() => setHovering(true)} onMouseLeave={() => setHovering(false)} className=\"pt-1 text-base group-hover:underline font-medium mx-6 text-center\">Lorem Ipsum dolor sit amet, cnosectetur adipsicing elit, sed do eiusmod tempor</p>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\atd68\\Documents\\real-appeal-exemptions\\src\\index.tsx",[],["108","109"],"C:\\Users\\atd68\\Documents\\real-appeal-exemptions\\src\\App.tsx",[],"C:\\Users\\atd68\\Documents\\real-appeal-exemptions\\src\\components\\Navbar.tsx",[],"C:\\Users\\atd68\\Documents\\real-appeal-exemptions\\src\\components\\ExemptionContainer.tsx",["110","111"],"C:\\Users\\atd68\\Documents\\real-appeal-exemptions\\src\\components\\ExemptionsSections\\ExemptionsLoading.tsx",[],["112","113"],"C:\\Users\\atd68\\Documents\\real-appeal-exemptions\\src\\components\\ExemptionsSections\\01LetsCheck.tsx",[],"C:\\Users\\atd68\\Documents\\real-appeal-exemptions\\src\\components\\ExemptionsSections\\02AvailableSavings.tsx",[],["114","115"],"C:\\Users\\atd68\\Documents\\real-appeal-exemptions\\src\\components\\ExemptionsSections\\03MailingAddress.tsx",["116"],"import React, {useState, useEffect} from 'react'\r\nimport AddressInput from '../AddressInput'\r\n\r\nexport default function MailingAddress({nextStep, previousStep, userInfo, setInfo }) {\r\n    const [userAddress, setUserAddress] = useState()\r\n    const [infoAccepted, setInfoAccepted] = useState(false)\r\n    \r\n    // Handles when any of the input fields change\r\n    function handleChange(info) {\r\n        let infoContainsEmptyValue = true\r\n        for(let i of Object.keys(info).filter(val=>val!=='appartment')) {\r\n            if(info[i]==='') {\r\n                infoContainsEmptyValue = false\r\n                break\r\n            }\r\n        }\r\n        setInfoAccepted(infoContainsEmptyValue)\r\n        setUserAddress(info)\r\n    }\r\n\r\n    // Makes sure that the info is accepted before continuing.\r\n    async function checkAndContinue() {\r\n        if(!infoAccepted) return\r\n        setInfo(userAddress)\r\n        nextStep()\r\n    }\r\n\r\n    // Here's a function that puts all the information into an object to test with an API\r\n    // async function checkAPI() {\r\n    //      let obj = {address, appartment, city, state, zipcode} \r\n    //      let result = fetch(API).then(..).data.isAccepted\r\n    //      return result\r\n    //  }\r\n\r\n    return (\r\n        <section className=\"exemption-container\">\r\n            <div className=\"container flex flex-col items-center\">\r\n                <div className=\"flex flex-col items-start justify-between w-3/4 relative\">\r\n                    <div className=\"flex w-full items-center mt-8 -ml-16\">\r\n                        <div className=\"h-10 w-10 mr-6\">\r\n                            <svg className=\"fill-current mt-1 text-brand-dark block h-10 w-10 top-0 left-0\" version=\"1.1\" id=\"Capa_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\" >\r\n                                <g>\r\n                                    <g>\r\n                                        <path d=\"M437.02,74.98C388.667,26.629,324.38,0,256,0S123.333,26.629,74.98,74.98C26.629,123.333,0,187.62,0,256\r\n                                            s26.629,132.667,74.98,181.02C123.333,485.371,187.62,512,256,512s132.667-26.629,181.02-74.98\r\n                                            C485.371,388.667,512,324.38,512,256S485.371,123.333,437.02,74.98z M256,70c30.327,0,55,24.673,55,55c0,30.327-24.673,55-55,55\r\n                                            c-30.327,0-55-24.673-55-55C201,94.673,225.673,70,256,70z M326,420H186v-30h30V240h-30v-30h110v180h30V420z\"/>\r\n                                    </g>\r\n                                </g>\r\n                            </svg>\r\n                        </div>\r\n                        <h1 className=\"exemption-title\">Enter your current mailing address</h1>\r\n                    \r\n                    </div>\r\n                    <p className=\"exemption-subtitle text-left mt-4\">We’re going check for available savings at your primary residence. <br/> Check to make sure the information below is where you primarily reside.</p>\r\n                    \r\n                    <AddressInput addressChange={handleChange} />\r\n                    \r\n                </div>\r\n                <div className=\"exemption-bottom absolute top-750-px\">\r\n                    <button className=\"exemption-back\" onClick={() => previousStep()}>Go Back</button>\r\n                    <button className={\"\"+(infoAccepted ? 'exemption-continue' : 'exemption-cannot-continue')} onClick={() => checkAndContinue()}>Continue</button>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n",["117","118"],"C:\\Users\\atd68\\Documents\\real-appeal-exemptions\\src\\components\\ExemptionsSections\\04Searching.tsx",[],"C:\\Users\\atd68\\Documents\\real-appeal-exemptions\\src\\components\\ExemptionsSections\\05WellCheck.tsx",[],["119","120"],"C:\\Users\\atd68\\Documents\\real-appeal-exemptions\\src\\components\\ExemptionInfoTab.tsx",[],"C:\\Users\\atd68\\Documents\\real-appeal-exemptions\\src\\components\\ExemptionsSections\\06GetStarted.tsx",["121"],"import React, {useEffect, useState} from 'react'\r\n\r\nexport default function GetStarted({nextStep, previousStep, userPersonal, userInfo, setInfo}) {\r\n    const [firstName, setFirstName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [dateOfBirth, setDateOfBirth] = useState('')\r\n    const [phoneNumber, setPhoneNumber] = useState('')\r\n    const [infoAccepted, setInfoAccepted] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if(firstName.length>0 && lastName.length>0 && email.length>0 && dateOfBirth.length>0 && phoneNumber.length>0) setInfoAccepted(true)\r\n    }, [firstName, lastName, email, dateOfBirth, phoneNumber])\r\n\r\n    useEffect(() => {\r\n        setFirstName(userPersonal.firstName)\r\n        setLastName(userPersonal.lastName)\r\n        setEmail(userPersonal.email)\r\n        setDateOfBirth(userPersonal.dateOfBirth)\r\n        setPhoneNumber(userPersonal.phoneNumber)\r\n    }, [])\r\n\r\n    function handleChange(event) {\r\n        let name = event.target.name\r\n        let value = event.target.value\r\n        // TODO Clean the input\r\n        switch(name) {\r\n            case 'firstName':\r\n                setFirstName(value)\r\n                break;\r\n            case 'lastName':\r\n                setLastName(value)\r\n                break; \r\n            case 'email':\r\n                setEmail(value)\r\n                break; \r\n            case 'dateOfBirth':\r\n                setDateOfBirth(value)\r\n                break;\r\n            case 'phoneNumber':\r\n                setPhoneNumber(value)\r\n                break; \r\n        }\r\n    }\r\n\r\n    // Makes sure that the info is accepted before continuing.\r\n    async function checkAndContinue() {\r\n        if(!infoAccepted) return\r\n        setInfo({firstName, lastName, email, dateOfBirth, phoneNumber})\r\n        nextStep()\r\n    }\r\n\r\n    return (\r\n        <section className=\"exemption-container\">\r\n            <div className=\"container flex flex-col items-center\">\r\n                <div className=\"flex flex-col items-start justify-between w-3/4 relative\">\r\n                    <div className=\"flex w-full items-center mt-8\">\r\n                        <h1 className=\"exemption-title\">Let's get started</h1>\r\n                    \r\n                    </div>\r\n                    <p className=\"exemption-subtitle text-left mt-4\">You’re on your way to savings — start by providing your legal name and contact information <br/> as they appear on your identification and property’s ownership records.</p>\r\n                    <div className=\"w-full flex flex-wrap\">\r\n                        <div className=\"mt-6 mr-6 w-full \">\r\n                            <div className=\"flex justify-between items-center\">\r\n                                <label className=\"exemption-label mb-0\">\r\n                                    Address\r\n                                </label>\r\n                            </div> \r\n                            <div className=\"flex mt-2 py-2 items-baseline\">\r\n                                <h3 className=\"mx-3 text-brand-default font-semibold\"> {userInfo.address}  {userInfo.city+', '+userInfo.state+' '+userInfo.zipcode} </h3>\r\n                                <button className=\"ml-auto text-blue-600 text-sm hover:underline\">Wrong address?</button>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div className=\"border-b mt-6 w-full\"> </div>\r\n                        <div className=\"mt-6 w-1/2 pr-6\">\r\n                            <label className=\"exemption-label\">\r\n                                First Name <span className=\"text-red-500\">*</span>\r\n                            </label>\r\n                            <input className=\"exemption-input\" type=\"text\" placeholder=\"e.g. Jane\" name=\"firstName\" value={firstName} onChange={handleChange} />\r\n                        </div>\r\n                        <div className=\" mt-6 w-1/2\">\r\n                            <label className=\"exemption-label\">\r\n                                Last Name <span className=\"text-red-500\">*</span>\r\n                            </label>\r\n                            <input className=\"exemption-input\" type=\"text\" placeholder=\"e.g. Doe\" name=\"lastName\" value={lastName} onChange={handleChange} />\r\n                        </div>\r\n                        <div className=\"mt-6 w-2/5 pr-6\">\r\n                            <label className=\"exemption-label\">\r\n                                Email Address <span className=\"text-red-500\">*</span>\r\n                            </label>\r\n                            <input className=\"exemption-input\" type=\"text\" placeholder=\"e.g. janedoe@gmail.com\" name=\"email\" value={email} onChange={handleChange} />\r\n                        </div>\r\n                        <div className=\" mt-6 flex-1 pr-6\">\r\n                            <label className=\"exemption-label\">\r\n                                Date of Birth <span className=\"text-red-500\">*</span>\r\n                            </label>\r\n                            <input className=\"exemption-input\" type=\"text\" placeholder=\"e.g. 06/16/1975\" name=\"dateOfBirth\" value={dateOfBirth} onChange={handleChange} />\r\n                        </div>\r\n                        <div className=\" mt-6 flex-1\">\r\n                            <label className=\"exemption-label\">\r\n                                Phone Number <span className=\"text-red-500\">*</span>\r\n                            </label>\r\n                            <input className=\"exemption-input\" type=\"text\" placeholder=\"e.g. 012-345-6789\" name=\"phoneNumber\" value={phoneNumber} onChange={handleChange} />\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    \r\n                </div>\r\n                <div className=\"exemption-bottom mt-24\">\r\n                    <button className=\"exemption-back\" onClick={() => previousStep()}>Go Back</button>\r\n                    <button className={\"\"+(infoAccepted ? 'exemption-continue' : 'exemption-cannot-continue')} onClick={() => checkAndContinue()}>Continue</button>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","C:\\Users\\atd68\\Documents\\real-appeal-exemptions\\src\\components\\AddressInput.tsx",["122"],"import React, {useState, useEffect} from 'react'\r\n\r\nexport default function AddressInput({addressChange}) {\r\n    const [address, setAddress] = useState('')\r\n    const [appartment, setAppartment] = useState('')\r\n    const [city, setCity] = useState('')\r\n    const [state, setState] = useState('')\r\n    const [zipcode, setZipCode] = useState('')\r\n\r\n    // useEffect checks to see that all fields are not empty, any time one of the fields changes\r\n    useEffect(() => {\r\n        addressChange({address, appartment, city, state, zipcode} )\r\n    }, [address, appartment, city, state, zipcode])\r\n\r\n    // Handles when any of the input fields change\r\n    function handleChange(event) {\r\n        let name = event.target.name\r\n        let value = event.target.value\r\n        // TODO Clean the input\r\n        switch(name) {\r\n            case 'address':\r\n                setAddress(value)\r\n                break;\r\n            case 'appartment':\r\n                setAppartment(value)\r\n                break; \r\n            case 'city':\r\n                setCity(value)\r\n                break; \r\n            case 'state':\r\n                setState(value)\r\n                break;\r\n            case 'zipcode':\r\n                setZipCode(value)\r\n                break; \r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"w-full flex flex-wrap mt-6\">\r\n            <div className=\"mt-6 w-3/5 pr-6\">\r\n                <label className=\"exemption-label\">\r\n                    Street Address <span className=\"text-red-500\">*</span>\r\n                </label>\r\n                <input className=\"exemption-input\" type=\"text\" placeholder=\"e.g. 123 Main St.\" name=\"address\" value={address} onChange={handleChange} />\r\n            </div>\r\n            <div className=\" mt-6 w-2/5\">\r\n                <label className=\"exemption-label\">\r\n                    Apt #\r\n                </label>\r\n                <input className=\"exemption-input\" type=\"text\" placeholder=\"Apt #4206\" name=\"appartment\" value={appartment} onChange={handleChange} />\r\n            </div>\r\n            <div className=\"mt-6 w-1/3 pr-6\">\r\n                <label className=\"exemption-label\">\r\n                    City <span className=\"text-red-500\">*</span>\r\n                </label>\r\n                <input className=\"exemption-input\" type=\"text\" placeholder=\"e.g. San Francisco\" name=\"city\" value={city} onChange={handleChange} />\r\n            </div>\r\n            <div className=\" mt-6 flex-1 pr-6\">\r\n                <label className=\"exemption-label\">\r\n                    State <span className=\"text-red-500\">*</span>\r\n                </label>\r\n                <input className=\"exemption-input\" type=\"text\" placeholder=\"e.g. CA\" name=\"state\" value={state} onChange={handleChange} />\r\n            </div>\r\n            <div className=\" mt-6 flex-1\">\r\n                <label className=\"exemption-label\">\r\n                    Zip Code <span className=\"text-red-500\">*</span>\r\n                </label>\r\n                <input className=\"exemption-input\" type=\"text\" placeholder=\"e.g. 94103\" name=\"zipcode\" value={zipcode} onChange={handleChange} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n",["123","124"],"C:\\Users\\atd68\\Documents\\real-appeal-exemptions\\src\\components\\Footer.tsx",[],"C:\\Users\\atd68\\Documents\\real-appeal-exemptions\\src\\components\\ExemptionsSections\\07CheckExemptions.tsx",["125","126"],"import { userInfo } from 'os'\r\nimport React, {useEffect, useState} from 'react'\r\nimport primaryResidence from '../../images/primaryResidence.png'\r\nimport movedIn from '../../images/movedIn.png'\r\nimport propertyPurchased from '../../images/propertyPurchased.png'\r\nimport ownsProperty from '../../images/ownsProperty.png'\r\nimport ExemptionsButton from '../ExemptionsButton'\r\n\r\nexport default function CheckExemptions({nextStep, previousStep, exemptions, userInfo}) {\r\n    const [refs, setRefs] = useState<Array<HTMLElement | null>>([]);\r\n\r\n    const getImageFromString = (str) => {\r\n        switch(str) {\r\n            case \"primaryResidence\":   \r\n                return primaryResidence;\r\n            case \"movedIn\":\r\n                return movedIn;\r\n            case \"propertyPurchased\":\r\n                return propertyPurchased;\r\n            case \"ownsProperty\":\r\n                return ownsProperty;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let refs: Array<HTMLElement | null>;\r\n        refs = [];\r\n        exemptions.map(exemption => exemption.questions.forEach((question, ind) => refs.push(document.getElementById(ind))));\r\n        console.log(refs);\r\n        setRefs(refs);\r\n    }, [])\r\n\r\n    const handleClick = (ind) => {\r\n        console.log(refs);\r\n        if(ind<3) refs[ind+1]?.scrollIntoView({\r\n            behavior: 'smooth',\r\n            block: 'start',\r\n          });\r\n    }\r\n\r\n    return (\r\n        <section className=\"exemption-container\">\r\n            {exemptions.map(exemption => exemption.questions.map((question, ind) => (\r\n                <div id={ind} key={exemption.id+ind} className=\"container flex flex-col justify-center\" style={{minHeight: \"80vh\"}}>\r\n                    <div className=\"flex flex-col items-center justify-between w-full\">\r\n                        <img src={getImageFromString(question.image)} className=\"w-36 h-36\" alt=\"\"/>\r\n                        <h1 className=\"exemption-title mt-8\">{question.content}</h1>\r\n                        <p className=\"exemption-subtitle w-3/5 mt-4\">{question.description}</p>\r\n                        <button className=\"text-blue-600 hover:underline\">Learn more</button>\r\n\r\n                        <div className=\"mt-8\">\r\n                            {question.options[0]==='Date' \r\n                            ? <div onBlur={() => handleClick(ind)} className=\"flex\">\r\n                                <input className=\"exemption-input w-full\" type=\"date\" placeholder={\"Date\"}/>\r\n                            </div>\r\n                            : <div  onClick={() => handleClick(ind)} className=\"flex flex-col\">\r\n                                {question.options.map((val,ind) => (\r\n                                    <ExemptionsButton key={ind} val={val} />))}  \r\n                            </div>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n            ))}\r\n            <div className=\"exemption-bottom mt-12\">\r\n                <button className=\"exemption-back\" onClick={() => previousStep()}>Go Back</button>\r\n                <button className=\"exemption-continue\" onClick={() => nextStep()}>Continue</button>\r\n            </div>\r\n        </section>\r\n    )\r\n}","C:\\Users\\atd68\\Documents\\real-appeal-exemptions\\src\\components\\ExemptionsButton.tsx",[],"C:\\Users\\atd68\\Documents\\real-appeal-exemptions\\src\\components\\ExemptionsSections\\08Review.tsx",[],{"ruleId":"127","severity":1,"message":"128","line":2,"column":8,"nodeType":"129","messageId":"130","endLine":2,"endColumn":13},{"ruleId":"127","severity":1,"message":"131","line":1,"column":16,"nodeType":"129","messageId":"130","endLine":1,"endColumn":24},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"127","severity":1,"message":"136","line":3,"column":8,"nodeType":"129","messageId":"130","endLine":3,"endColumn":14},{"ruleId":"137","severity":1,"message":"138","line":150,"column":8,"nodeType":"139","endLine":150,"endColumn":16,"suggestions":"140"},{"ruleId":"132","replacedBy":"141"},{"ruleId":"134","replacedBy":"142"},{"ruleId":"132","replacedBy":"143"},{"ruleId":"134","replacedBy":"144"},{"ruleId":"127","severity":1,"message":"145","line":1,"column":26,"nodeType":"129","messageId":"130","endLine":1,"endColumn":35},{"ruleId":"132","replacedBy":"146"},{"ruleId":"134","replacedBy":"147"},{"ruleId":"132","replacedBy":"148"},{"ruleId":"134","replacedBy":"149"},{"ruleId":"137","severity":1,"message":"150","line":21,"column":8,"nodeType":"139","endLine":21,"endColumn":10,"suggestions":"151"},{"ruleId":"137","severity":1,"message":"152","line":13,"column":8,"nodeType":"139","endLine":13,"endColumn":51,"suggestions":"153"},{"ruleId":"132","replacedBy":"154"},{"ruleId":"134","replacedBy":"155"},{"ruleId":"127","severity":1,"message":"156","line":1,"column":10,"nodeType":"129","messageId":"130","endLine":1,"endColumn":18},{"ruleId":"137","severity":1,"message":"157","line":31,"column":8,"nodeType":"139","endLine":31,"endColumn":10,"suggestions":"158"},"@typescript-eslint/no-unused-vars","'image' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","no-native-reassign",["159"],"no-negated-in-lhs",["160"],"'Footer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'hasFound' and 'states'. Either include them or remove the dependency array.","ArrayExpression",["161"],["159"],["160"],["159"],["160"],"'useEffect' is defined but never used.",["159"],["160"],["159"],["160"],"React Hook useEffect has missing dependencies: 'userPersonal.dateOfBirth', 'userPersonal.email', 'userPersonal.firstName', 'userPersonal.lastName', and 'userPersonal.phoneNumber'. Either include them or remove the dependency array. If 'setFirstName' needs the current value of 'userPersonal.firstName', you can also switch to useReducer instead of useState and read 'userPersonal.firstName' in the reducer.",["162"],"React Hook useEffect has a missing dependency: 'addressChange'. Either include it or remove the dependency array. If 'addressChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["163"],["159"],["160"],"'userInfo' is defined but never used.","React Hook useEffect has a missing dependency: 'exemptions'. Either include it or remove the dependency array.",["164"],"no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},"Update the dependencies array to be: [fromTo, hasFound, states]",{"range":"173","text":"174"},"Update the dependencies array to be: [userPersonal.dateOfBirth, userPersonal.email, userPersonal.firstName, userPersonal.lastName, userPersonal.phoneNumber]",{"range":"175","text":"176"},"Update the dependencies array to be: [address, addressChange, appartment, city, state, zipcode]",{"range":"177","text":"178"},"Update the dependencies array to be: [exemptions]",{"range":"179","text":"180"},[6709,6717],"[fromTo, hasFound, states]",[958,960],"[userPersonal.dateOfBirth, userPersonal.email, userPersonal.firstName, userPersonal.lastName, userPersonal.phoneNumber]",[544,587],"[address, addressChange, appartment, city, state, zipcode]",[1198,1200],"[exemptions]"]